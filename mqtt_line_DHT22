#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <DHT.h>
#include <TridentTD_LineNotify.h>
#include <PubSubClient.h>
#include <ArduinoJson.h>

// LINE Token號碼
#define LINE_TOKEN "LINE_TOKEN_XXXXXX"//LINE權杖

// WiFi設置
const char* ssid = "XXXXXX";//WIFI名稱
const char* password = "ZZZZZZ";//WIFI密碼

// DHT感測器設置
#define DHTPIN D1
#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);

// MQTT伺服器
const char* mqtt_server = "demo.thingsboard.io";
const char* mqtt_topic = "v1/devices/me/rpc/request/+";
const char* mqtt_token = "thingsboard_MQTT"; //Thingsboard申請的TOKN

// 初始化WiFi和MQTT客戶端
WiFiClient espClient;
PubSubClient client(espClient);

float h, t;//接溫濕度資料用

void setup() {
  Serial.begin(115200);
  dht.begin();//初始DHT22的資料

  WiFi.begin(ssid, password);//ESP8266連接網路
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("WiFi connected");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  client.setServer(mqtt_server, 1883);//設定
  client.setCallback(callback);

  LINE.setToken(LINE_TOKEN);//
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  String message;
  for (unsigned int i = 0; i < length; i++) {
    message += (char)payload[i];
  }
  Serial.println(message);

  // 解析MQTT消息
  StaticJsonBuffer<200> jsonBuffer;
  JsonObject& data = jsonBuffer.parseObject((char*)payload);
  if (!data.success()) {
    Serial.println("parseObject() failed");
    return;
  }

  String methodName = String((const char*)data["method"]);
  if (methodName.equals("getTemperatureHumidity")) {//字串要配合手機程式的設定
    sendTemperatureHumidity();//向LINE傳送溫溼度
  }
}

void sendTemperatureHumidity() {
  h = dht.readHumidity();
  t = dht.readTemperature();

  if (isnan(t) || isnan(h)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  String temperature = String(t);
  String humidity = String(h);

  String message = "\n溫度: " + temperature + "℃濕度: " + humidity + "%";
  Serial.println("Sending to LINE: " + message);
  //LINE.setToken(LINE_TOKEN);
  LINE.notify(message);
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    if (client.connect("ESP8266Client", mqtt_token, NULL)) {
      Serial.println("connected");
      client.subscribe(mqtt_topic);
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}
